from colors import *

"""
For Malware-related utilities across notebooks
"""
def malicious_confidence(vt_results):
    """
    Determine malicious confidence from a VT API Report
    """
    try:
        dispositions = [r["result"] for r in vt_results["results"]["scans"].values()]
        malicious = list(filter(lambda d: d != None, dispositions))
        return round(len(malicious) / len(dispositions) * 100, 2)
    except KeyError:
        return None

def determine_criticality(conf):
    """
    Maps confidence level of VT analysis to color code
    """
    conf = int(conf)
    try:
        if conf < 0:
            print("Out of range")
        elif conf in range (0,21):
            criticality = none
        elif conf in range (21,41):
            criticality = low
        elif conf in range(41, 61):
            criticality = med
        elif conf in range(61, 81):
            criticality = high
        else:
            criticality = crit
    except Exception as e:
        print(str(e))
    return criticality

