from reportlab import xrange

from colors import *

"""
For Malware-related utilities across notebooks
"""
def malicious_confidence(vt_results):
    """
    Determine malicious confidence from a VT API Report
    """
    try:
        dispositions = [r["result"] for r in vt_results["results"]["scans"].values()]
        malicious = list(filter(lambda d: d != None, dispositions))
        return round(len(malicious) / len(dispositions) * 100, 2)
    except KeyError:
        return None

def determine_criticality(score):
    """
    Maps confidence level of VT analysis to criticality
    """
    if score:
        if score >= 90:
            print(r"  \\--> " + crit + "Criticality Level: Critical")
            return "Critical"
        elif score >= 70:
            print(r"  \\--> " + high + "Criticality Level: High")
            return "High"
        elif score >= 50:
            print(r"  \\--> " + med + "Criticality Level: Medium")
            return "Medium"
        elif score >= 20:
            print(r"  \\--> " + low + "Criticality Level: Low")
            return "Low"
        else:
            print(r"  \\--> " + none + "Criticality Level: None")
            return "None"
    else:
        print(r"  \\--> " + none + "Criticality Level: None")
        return "None"